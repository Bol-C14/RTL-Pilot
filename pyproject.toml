[build-system]
requires = ["setuptools>=68.0.0", "wheel>=0.41.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rtl-pilot"
description = "Multi-Agent LLM Framework for RTL Verification Automation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "RTL-Pilot Development Team", email = "rtl-pilot@example.com"}
]
maintainers = [
    {name = "RTL-Pilot Development Team", email = "rtl-pilot@example.com"}
]
keywords = [
    "rtl", "verification", "testbench", "verilog", "systemverilog",
    "vivado", "llm", "ai", "automation", "eda", "fpga", "asic",
    "multi-agent", "code-generation", "testing"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Code Generators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment",
]
requires-python = ">=3.8"
dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "jinja2>=3.1.0",
    "click>=8.0.0",
    "streamlit>=1.28.0",
    "pyyaml>=6.0",
    "toml>=0.10.2",
    "openai>=1.0.0",
    "tiktoken>=0.5.0",
    "aiofiles>=23.0.0",
    "pathlib2>=2.3.7; python_version<'3.9'",
    "tabulate>=0.9.0",
    "loguru>=0.7.0",
    "rich>=13.0.0",
    "colorama>=0.4.6",
    "psutil>=5.9.0",
    "python-dotenv>=1.0.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/rtl-pilot/rtl-pilot"
Documentation = "https://rtl-pilot.readthedocs.io/"
Repository = "https://github.com/rtl-pilot/rtl-pilot.git"
"Bug Tracker" = "https://github.com/rtl-pilot/rtl-pilot/issues"
Changelog = "https://github.com/rtl-pilot/rtl-pilot/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "coverage>=7.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinxcontrib-mermaid>=0.9.0",
]
web = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "websockets>=11.0.0",
    "httpx>=0.25.0",
]
visualization = [
    "matplotlib>=3.7.0",
    "plotly>=5.17.0",
    "jinja2-time>=0.2.0",
]
hardware = [
    "pyserial>=3.5",
    "paramiko>=3.3.0",
]
ai-extended = [
    "anthropic>=0.8.0",
    "langchain>=0.1.0",
]
caching = [
    "redis>=4.6.0",
    "sqlalchemy>=2.0.0",
]
security = [
    "keyring>=24.0.0",
    "cryptography>=41.0.0",
]
all = [
    "rtl-pilot[dev,docs,web,visualization,hardware,ai-extended,caching,security]"
]

[project.scripts]
rtl-pilot = "rtl_pilot.interface.cli:main"
rtl-pilot-web = "rtl_pilot.interface.web_ui:main"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
rtl_pilot = [
    "prompts/*.jinja2",
    "scripts/*.tcl",
    "config/*.yaml",
    "config/*.json",
]

[tool.setuptools.dynamic]
version = {attr = "rtl_pilot.__version__"}

# Development tool configurations

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["rtl_pilot", "tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "click.*",
    "jinja2.*",
    "yaml.*",
    "toml.*",
    "openai.*",
    "tiktoken.*",
    "loguru.*",
    "rich.*",
    "tabulate.*",
    "psutil.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=rtl_pilot",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "requires_vivado: Tests requiring Vivado installation",
    "requires_openai: Tests requiring OpenAI API key",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["rtl_pilot"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]
per-file-ignores = [
    "__init__.py:F401",
]

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]
